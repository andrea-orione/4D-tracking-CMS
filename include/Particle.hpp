#pragma once

#include <TLorentzVector.h>
#include <TMatrixD.h>
#include <TVector3.h>
#include <vector>

/**
 * The particle class.
 *
 * It represents a single particle generated by the particle gun.
 * It has a vector containing all the positions reached by the simulation.
 */
class Particle {
public:
    Particle(TLorentzVector initialPosition, TVector3 velocity, double mass, double charge=0.);

    TLorentzVector zSpaceEvolve(double finalZ);

    std::vector<TLorentzVector> getPositions() { return positions; }
    TVector3 getVelocity() { return velocity; }
    std::vector<TMatrixD> getStates();

private:
    TVector3 velocity;
    std::vector<TLorentzVector> positions;

    const double mass;
    const double charge;
};
