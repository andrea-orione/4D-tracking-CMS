#pragma once

#include "MeasuresAndStates.hpp"
#include <TLorentzVector.h>
#include <TMatrixD.h>
#include <TVector3.h>
#include <vector>

/**
 * The particle class.
 *
 * It represents a single particle generated by the particle gun.
 * It has a vector containing all the positions reached by the simulation.
 */
class Particle {
public:
  Particle(TLorentzVector initialPosition, TVector3 velocity, double mass,
           double charge = 0.);

  TLorentzVector zSpaceEvolve(double finalZ);

  std::vector<ParticleState> getStates() { return states; };

private:
  std::vector<ParticleState> states;

  const double mass;
  const double charge;
};
