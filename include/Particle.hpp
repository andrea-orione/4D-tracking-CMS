#pragma once

#include "MeasuresAndStates.hpp"
#include <TLorentzVector.h>
#include <TMatrixD.h>
#include <TVector3.h>

/**
 * The particle class.
 *
 * It represents a single particle generated by the particle gun.
 * It has a vector containing all the positions reached by the simulation.
 */
class Particle {
public:
  Particle(TLorentzVector initialPosition, TVector3 velocity, double mass,
           double charge = 0.);

  ParticleState getInitialState() const { return initialState; }
  ParticleState
  zSpaceEvolve(ParticleState preaviousState, double finalZ,
               bool multipleScattering = true,
               std::optional<int> detectorId = std::nullopt) const;

private:
  ParticleState initialState;

  const double mass;
  const double charge;
};
